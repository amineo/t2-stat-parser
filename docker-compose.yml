version: "3.7"

# Service Definitions
services:
  db:
    image: "amineo/t2-stats-db:v0.2.0"
    build:
      context: .
      dockerfile: ./build/postgres/Dockerfile
    environment:
      POSTGRES_DB: "t2_stats"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - psqldata:/var/lib/postgresql/data
    networks:
      - internal
    deploy:
      labels:
        - traefik.enable=false
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  parser:
    image: "amineo/t2-stats-parser:v0.3.0"
    build:
      context: .
      dockerfile: ./build/go-t2-stat-parser/Dockerfile
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:{POSTGRES_PASSWORD}@db:5432/t2_stats"
      FTP_HOST: "${FTP_HOST}"
      FTP_USER: "${FTP_USER}"
      FTP_PW: "${FTP_PW}"
    depends_on:
      - db
    networks:
      - internal
    deploy:
      labels:
        - traefik.enable=false
      mode: replicated
      replicas: 1

  api:
    image: "amineo/t2-stats-api:v0.0.10"
    build:
      context: .
      dockerfile: ./build/api/Dockerfile
    environment:
      NODE_ENV: "production" # set as default in image
      APP_NAME: "T2StatsAPI" # set as default in image
    depends_on:
      - db
    networks:
      - internal
      - external

  # web:
  #   image: "amineo/t2-stats-web:v0.1.0-rc6"
  #   build:
  #     context: .
  #     dockerfile: ./build/webapp/Dockerfile
  #   environment:
  #     NODE_ENV: "production" # set as default in image
  #     CACHE_VIEWS: "true" # set as default in image
  #     APP_NAME: "Web" # set as default in image
  #     #     APP_KEY: "You-need-to-generate-this (npx adonis key:generate --echo)"
  #     APP_KEY_FILE: /run/secrets/adonis.appkey
  #     DB_HOST: "db"
  #     DB_PORT: 5432
  #     DB_USER: ""
  #     DB_PASSWORD: ""
  #     DB_DATABASE: t2_stats
  #   secrets:
  #     - adonis.appkey
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - internal
  #     - external
  #   deploy:
  #     # labels:
  #     #   - traefik.enable=false
  #     mode: replicated
  #     replicas: 1

volumes:
  psqldata:

networks:
  external:
  internal:

secrets:
  adonis.appkey:
    external: true
    name: adonis.appkey.v1
